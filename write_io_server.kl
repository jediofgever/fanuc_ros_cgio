-- karel program to LISTEN ON tcp IP PORT 59003 FOR EDITING IO VALUES ON r30 FANUC CONTROLLERS
-- establish a TCP connection on your robot ip with defined port(59003), send 5 digit string to control IOs(DOUT,RDO,AOUT)
-- the first digit specifies IO tYPE(1 = DOUT, 2 = RDO, 3 = AOUT)
-- the digits 3 digits in middle specifies IO index(from 1 up tp 512)
-- the last digit is IO value to be set



PROGRAM IO_SERVER_WR
%STACKSIZE = 4000
%NOLOCKGROUP
%NOPAUSE=ERROR+COMMAND+TPENABLE
%ENVIRONMENT uif
%ENVIRONMENT sysdef
%ENVIRONMENT memo
%ENVIRONMENT kclop
%ENVIRONMENT bynam
%ENVIRONMENT fdev
%ENVIRONMENT flbt
%INCLUDE klevccdf
%INCLUDE klevkeys
%INCLUDE klevkmsk
-------------------------------------------------------------------------------
--Program variables used to listen to commands and set DOUT, AOUT, RDO outputs on FANUC rb30 Controller
VAR
      file_write : FILE
      temp_str : STRING[5]
      entry    : INTEGER
      STATUS   : INTEGER
      io_type  : STRING[1]
      io_index : STRING[3]
      io_val   : STRING[1]
      io_type_int  : INTEGER
      io_index_int : INTEGER
      io_val_int   : INTEGER
      destroy      : INTEGER


-- INTEGER TO BOOLEAN CONVERTER
ROUTINE i_to_b(b : INTEGER) : BOOLEAN
  BEGIN
    IF b = 0 THEN
      RETURN(OFF)
    ELSE
      RETURN(ON)
    ENDIF
END i_to_b


--Begin the program
BEGIN

restart::

SET_FILE_ATR(file_write, ATR_IA)
SET_VAR(entry, '*SYSTEM*','$HOSTS_CFG[6].$SERVER_PORT',59003,STATUS)

WRITE('Starting server for IO Reading service..',CR)

MSG_DISCO('S6:',STATUS)
MSG_CONNECT('S6:',STATUS)

WRITE(' CONNECT STATUS = ',STATUS,CR)

 
IF STATUS = 0 THEN

    WRITE('Success initilizing IO WRITE service!!!')  

    loop::
    
    --if connection is allright loop 
    --Listens to 5 digit string from TCP Port on 59003
    -- the first digit specifies IO tYPE(1 = DOUT, 2 = RDO, 3 = AOUT)
    -- the digits 3 digits in middle specifies IO index(from 1 up tp 512)
    -- the last digit is IO value to be set

    CLR_IO_STAT(file_write)
    OPEN FILE file_write ('rw','S6:') 
    CLR_IO_STAT(file_write)
    BYTES_AHEAD(file_write, entry, STATUS)
    
    READ file_write (temp_str::5)


    IF UNINIT(temp_str) THEN
        WRITE ('io write is Unint', CR)
        MSG_DISCO('S6:',STATUS)
        MSG_CONNECT('S6:',STATUS)
        GO TO loop
    ENDIF


    io_type = SUB_STR(temp_str,1,1)
    io_index = SUB_STR(temp_str,2,3)
    io_val = SUB_STR(temp_str,5,1)

    IF UNINIT(io_type) THEN
      GO TO restart
    ENDIF

    WRITE('recieved:',temp_str,CR)
    

    IF STR_LEN(temp_str) = 5 THEN

        -- Convert to Integers
        CNV_STR_INT(io_type,io_type_int)
        CNV_STR_INT(io_index,io_index_int)
        CNV_STR_INT(io_val,io_val_int)


        IF UNINIT(io_index_int) THEN
          GO TO restart
        ENDIF

        destroy  = io_index_int + io_val_int + io_type_int 
        IF destroy = 0 THEN
          WRITE ('Destrying connection!', CR)
          CLOSE FILE file_write
          GO TO restart
        ENDIF

        --WRITE to DOUT
        ------------------------------------------
        IF io_type_int = 1 THEN
          IF io_index_int < 513 THEN
            DOUT[io_index_int] = i_to_b(io_val_int)
          ENDIF  
        ENDIF  

        --WRITE to RDO
        ------------------------------------------
        IF io_type_int = 2 THEN
          IF io_index_int < 9 THEN
            RDO[io_index_int] = i_to_b(io_val_int)
          ENDIF  
        ENDIF  

        --WRITE to AOUT
        ------------------------------------------
        IF io_type_int = 3 THEN
          IF io_index_int < 9 THEN
            AOUT[io_index_int] = io_val_int
          ENDIF  
        ENDIF
      ENDIF    
      --cLOSE THE FILE AND WAIT FOR ANOTHER CONNECTION
      CLOSE FILE file_write
      GO TO loop     
ENDIF  
WRITE('DISCONNECTING FROM WRITE IO SERVICE, YOU WILL NEED TO RESET AND RUN THE PROGRAM AGAIN.',CR)      
MSG_DISCO('S6:',STATUS)
GO TO restart
END IO_SERVER_WR